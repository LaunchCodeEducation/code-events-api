// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace CodeEventsAPI.Data.Migrations {
  [DbContext(typeof(CodeEventsDbContext))]
  internal class CodeEventsDBContextModelSnapshot : ModelSnapshot {
    protected override void BuildModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
      modelBuilder
        .HasAnnotation("ProductVersion", "3.1.2")
        .HasAnnotation("Relational:MaxIdentifierLength", 64);

      modelBuilder.Entity("CodeEventsAPI.Models.CodeEvent",
        b => {
          b.Property<long>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("bigint");

          b.Property<DateTime>("Date")
            .HasColumnType("datetime(6)");

          b.Property<string>("Description")
            .HasColumnType("longtext CHARACTER SET utf8mb4");

          b.Property<string>("Title")
            .HasColumnType("longtext CHARACTER SET utf8mb4");

          b.HasKey("Id");

          b.ToTable("Events");
        });

      modelBuilder.Entity("CodeEventsAPI.Models.Member",
        b => {
          b.Property<long>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("bigint");

          b.Property<long>("CodeEventId")
            .HasColumnType("bigint");

          b.Property<int>("Role")
            .HasColumnType("int");

          b.Property<long>("UserId")
            .HasColumnType("bigint");

          b.HasKey("Id");

          b.HasIndex("CodeEventId");

          b.HasIndex("UserId", "CodeEventId")
            .IsUnique();

          b.ToTable("Members");
        });

      modelBuilder.Entity("CodeEventsAPI.Models.User",
        b => {
          b.Property<long>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("bigint");

          b.Property<string>("Email")
            .HasColumnType("longtext CHARACTER SET utf8mb4");

          b.Property<string>("Password")
            .HasColumnType("longtext CHARACTER SET utf8mb4");

          b.HasKey("Id");

          b.ToTable("Users");
        });

      modelBuilder.Entity("CodeEventsAPI.Models.Member",
        b => {
          b.HasOne("CodeEventsAPI.Models.CodeEvent", "CodeEvent")
            .WithMany()
            .HasForeignKey("CodeEventId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

          b.HasOne("CodeEventsAPI.Models.User", "User")
            .WithMany()
            .HasForeignKey("UserId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();
        });
#pragma warning restore 612, 618
    }
  }
}